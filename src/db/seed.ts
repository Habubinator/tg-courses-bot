import { PrismaClient, MediaType, CourseState } from "../../generated/prisma";
import dotenv from "dotenv";

// Load environment variables
dotenv.config();

const prisma = new PrismaClient();

async function seed() {
    console.log("üå± Starting database seeding...");

    try {
        // Create admin user
        console.log("üë®‚Äçüíº Creating admin user...");
        const admin = await prisma.admin.create({
            data: {
                telegramId: "513950472", // Replace with your actual Telegram ID
            },
        });
        console.log(`‚úÖ Admin created with ID: ${admin.id}`);

        // Create course
        console.log("üìö Creating test course...");
        const course = await prisma.course.create({
            data: {
                title: "–û—Å–Ω–æ–≤—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —à–∫–æ–ª–µ",
                description:
                    "–ö—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞–º –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ —à–∫–æ–ª–µ",
                isActive: true,
                orderIndex: 1,
            },
        });
        console.log(`‚úÖ Course created: ${course.title}`);

        // Create lessons
        console.log("üìñ Creating lessons...");

        // Lesson 1: Introduction
        const lesson1 = await prisma.lesson.create({
            data: {
                courseId: course.id,
                title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É—Ä—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                mediaType: MediaType.PHOTO,
                mediaUrl:
                    "https://images.unsplash.com/photo-1580582932707-520aed937b7b?w=800",
                caption:
                    'üéì –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É—Ä—Å "–û—Å–Ω–æ–≤—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —à–∫–æ–ª–µ"!\n\n–í —ç—Ç–æ–º –∫—É—Ä—Å–µ –≤—ã –∏–∑—É—á–∏—Ç–µ:\n‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ —à–∫–æ–ª–µ\n‚Ä¢ –û—Å–Ω–æ–≤—ã –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n‚Ä¢ –î–µ–π—Å—Ç–≤–∏—è –≤ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö\n‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è\n\n–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º –æ–±—É—á–µ–Ω–∏–µ!',
                buttonText: "üìã –ü—Ä–∞–≤–∏–ª–∞ –∫—É—Ä—Å–∞",
                buttonUrl: "https://example.com/rules",
                orderIndex: 0,
            },
        });

        // Lesson 2: Fire Safety
        const lesson2 = await prisma.lesson.create({
            data: {
                courseId: course.id,
                title: "–ü–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
                mediaType: MediaType.VIDEO,
                mediaUrl:
                    "https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_1mb.mp4",
                caption:
                    "üî• –£—Ä–æ–∫ 1: –ü–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n\n–í —ç—Ç–æ–º —É—Ä–æ–∫–µ –≤—ã —É–∑–Ω–∞–µ—Ç–µ:\n‚Ä¢ –ö–∞–∫ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ø–æ–∂–∞—Ä\n‚Ä¢ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –æ–≥–Ω—è\n‚Ä¢ –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —ç–≤–∞–∫—É–∏—Ä–æ–≤–∞—Ç—å—Å—è\n‚Ä¢ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª–µ–º\n\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª!",
                buttonText: "üöí –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —ç–≤–∞–∫—É–∞—Ü–∏–∏",
                buttonUrl: "https://example.com/evacuation",
                orderIndex: 1,
            },
        });

        // Create test for lesson 2
        const test1 = await prisma.test.create({
            data: {
                lessonId: lesson2.id,
                title: "–¢–µ—Å—Ç –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            },
        });

        // Create questions for test 1
        const questions1 = await prisma.question.createMany({
            data: [
                {
                    testId: test1.id,
                    questionText:
                        "–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –ø–æ–∂–∞—Ä–∞?",
                    options: [
                        "–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ—Ç—É—à–∏—Ç—å –æ–≥–æ–Ω—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ",
                        "–°–æ–æ–±—â–∏—Ç—å –≤–∑—Ä–æ—Å–ª—ã–º –∏–ª–∏ –≤—ã–∑–≤–∞—Ç—å –ø–æ–∂–∞—Ä–Ω—É—é —Å–ª—É–∂–±—É",
                        "–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–∏ –≤–µ—â–∏",
                        "–°–ø—Ä—è—Ç–∞—Ç—å—Å—è –≤ –∫–ª–∞—Å—Å–µ",
                    ],
                    correctOption: 1,
                    orderIndex: 0,
                },
                {
                    testId: test1.id,
                    questionText:
                        "–ü–æ –∫–∞–∫–æ–º—É –Ω–æ–º–µ—Ä—É –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞?",
                    options: ["101", "102", "103", "104"],
                    correctOption: 0,
                    orderIndex: 1,
                },
                {
                    testId: test1.id,
                    questionText: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∫–∏–¥–∞—Ç—å –∑–¥–∞–Ω–∏–µ –ø—Ä–∏ –ø–æ–∂–∞—Ä–µ?",
                    options: [
                        "–ë–µ–∂–∞—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ",
                        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—Ñ—Ç",
                        "–î–≤–∏–≥–∞—Ç—å—Å—è —Å–ø–æ–∫–æ–π–Ω–æ –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ, –ø—Ä–∏–≥–Ω—É–≤—à–∏—Å—å",
                        "–ñ–¥–∞—Ç—å –ø–æ–º–æ—â–∏ –≤ –∫–ª–∞—Å—Å–µ",
                    ],
                    correctOption: 2,
                    orderIndex: 2,
                },
            ],
        });

        // Lesson 3: Emergency Situations
        const lesson3 = await prisma.lesson.create({
            data: {
                courseId: course.id,
                title: "–î–µ–π—Å—Ç–≤–∏—è –≤ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö",
                mediaType: MediaType.PHOTO,
                mediaUrl:
                    "https://images.unsplash.com/photo-1584464491033-06628f3a6b7b?w=800",
                caption:
                    "‚ö†Ô∏è –£—Ä–æ–∫ 2: –ß—Ä–µ–∑–≤—ã—á–∞–π–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏\n\n–í —ç—Ç–æ–º —É—Ä–æ–∫–µ –∏–∑—É—á–∞–µ–º:\n‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è\n‚Ä¢ –°–∏–≥–Ω–∞–ª—ã —Ç—Ä–µ–≤–æ–≥–∏ –≤ —à–∫–æ–ª–µ\n‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–∏\n‚Ä¢ –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ —É–≥—Ä–æ–∑–µ —Ç–µ—Ä–∞–∫—Ç–∞\n\n–ó–Ω–∞–Ω–∏–µ —ç—Ç–∏—Ö –ø—Ä–∞–≤–∏–ª –º–æ–∂–µ—Ç —Å–ø–∞—Å—Ç–∏ –∂–∏–∑–Ω—å!",
                orderIndex: 2,
            },
        });

        // Create test for lesson 3
        const test2 = await prisma.test.create({
            data: {
                lessonId: lesson3.id,
                title: "–¢–µ—Å—Ç –ø–æ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º",
            },
        });

        // Create questions for test 2
        const questions2 = await prisma.question.createMany({
            data: [
                {
                    testId: test2.id,
                    questionText:
                        "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–π –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –∑–≤—É–∫ —Å–∏—Ä–µ–Ω—ã –≤ —à–∫–æ–ª–µ?",
                    options: [
                        "–ù–∞—á–∞–ª–æ —É—Ä–æ–∫–∞",
                        "–ü–æ–∂–∞—Ä–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
                        "–í–æ–∑–¥—É—à–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
                        "–ö–æ–Ω–µ—Ü —É—á–µ–±–Ω–æ–≥–æ –¥–Ω—è",
                    ],
                    correctOption: 2,
                    orderIndex: 0,
                },
                {
                    testId: test2.id,
                    questionText:
                        "–ö–∞–∫ –Ω—É–∂–Ω–æ –≤–µ—Å—Ç–∏ —Å–µ–±—è –ø—Ä–∏ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–∏, –Ω–∞—Ö–æ–¥—è—Å—å –≤ –∫–ª–∞—Å—Å–µ?",
                    options: [
                        "–í—ã–±–µ–∂–∞—Ç—å –∏–∑ –∫–ª–∞—Å—Å–∞",
                        "–°–ø—Ä—è—Ç–∞—Ç—å—Å—è –ø–æ–¥ –ø–∞—Ä—Ç—É –∏ –¥–µ—Ä–∂–∞—Ç—å—Å—è –∑–∞ –µ–µ –Ω–æ–∂–∫–∏",
                        "–í—Å—Ç–∞—Ç—å —É –æ–∫–Ω–∞",
                        "–ó–∞–±—Ä–∞—Ç—å—Å—è –Ω–∞ —Å—Ç–æ–ª",
                    ],
                    correctOption: 1,
                    orderIndex: 1,
                },
            ],
        });

        // Lesson 4: Road Safety
        const lesson4 = await prisma.lesson.create({
            data: {
                courseId: course.id,
                title: "–ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è",
                mediaType: MediaType.VIDEO,
                mediaUrl:
                    "https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_2mb.mp4",
                caption:
                    "üö¶ –£—Ä–æ–∫ 3: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ –¥–æ—Ä–æ–≥–µ\n\n–ò–∑—É—á–∞–µ–º –≤–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:\n‚Ä¢ –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ—Ä–æ–≥—É\n‚Ä¢ –ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ—Ä–æ–∂–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤\n‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–µ—à–µ—Ö–æ–¥–æ–≤\n‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ\n\n–≠—Ç–∏ –∑–Ω–∞–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –≤–∞–º –±—ã—Ç—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!",
                buttonText: "üö∏ –ü–î–î –¥–ª—è –¥–µ—Ç–µ–π",
                buttonUrl: "https://example.com/road-rules",
                orderIndex: 3,
            },
        });

        // Final lesson without test
        const lesson5 = await prisma.lesson.create({
            data: {
                courseId: course.id,
                title: "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞",
                mediaType: MediaType.PHOTO,
                mediaUrl:
                    "https://images.unsplash.com/photo-1517486808906-6ca8b3f04846?w=800",
                caption:
                    "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º –∫—É—Ä—Å–∞!\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑—É—á–∏–ª–∏:\n‚úÖ –ü–æ–∂–∞—Ä–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n‚úÖ –î–µ–π—Å—Ç–≤–∏—è –≤ –ß–°\n‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è\n\n–¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Å–≤–æ—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ —à–∫–æ–ª–µ –∏ –∑–∞ –µ–µ –ø—Ä–µ–¥–µ–ª–∞–º–∏. –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!",
                orderIndex: 4,
            },
        });

        console.log(`‚úÖ Created ${5} lessons`);

        // Create notifications
        console.log("üîî Creating notifications...");

        // Notification for lesson watching timeout
        await prisma.notification.create({
            data: {
                courseId: course.id,
                state: CourseState.WATCHING_LESSON,
                mediaType: MediaType.PHOTO,
                mediaUrl:
                    "https://images.unsplash.com/photo-1611224923853-80b023f02d71?w=800",
                caption:
                    "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –æ–±—É—á–µ–Ω–∏—è\n\n–í—ã –Ω–∞—á–∞–ª–∏ –∏–∑—É—á–∞—Ç—å –∫—É—Ä—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –Ω–æ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —É—Ä–æ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ!\n\n–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã –¥–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
                buttonText: "üìö –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ",
                buttonUrl: "https://t.me/your_bot_username",
                delayMinutes: 30,
                isActive: true,
            },
        });

        // Notification for test timeout
        await prisma.notification.create({
            data: {
                courseId: course.id,
                state: CourseState.TAKING_TEST,
                mediaType: MediaType.PHOTO,
                mediaUrl:
                    "https://images.unsplash.com/photo-1434030216411-0b793f4b4173?w=800",
                caption:
                    "üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç!\n\n–í—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ —É—Ä–æ–∫, –Ω–æ –Ω–µ –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç. –¢–µ—Å—Ç –ø–æ–º–æ–∂–µ—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ!",
                buttonText: "üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç",
                buttonUrl: "https://t.me/your_bot_username",
                delayMinutes: 45,
                isActive: true,
            },
        });

        console.log("‚úÖ Created 2 notifications");

        // Create sample user for testing
        console.log("üë§ Creating test user...");
        const testUser = await prisma.user.create({
            data: {
                telegramId: "987654321",
                username: "testuser",
                firstName: "–¢–µ—Å—Ç",
                lastName: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                phoneNumber: "+380123456789",
            },
        });

        // Create user course progress (started but not completed)
        const userCourse = await prisma.userCourse.create({
            data: {
                userId: testUser.id,
                courseId: course.id,
                currentLessonIndex: 1,
                state: CourseState.WATCHING_LESSON,
                lastActivity: new Date(Date.now() - 10 * 60 * 1000), // 10 minutes ago
            },
        });

        console.log("‚úÖ Created test user with course progress");

        console.log("\nüéâ Database seeding completed successfully!");
        console.log("\nüìä Summary:");
        console.log(`‚Ä¢ 1 course: "${course.title}"`);
        console.log("‚Ä¢ 5 lessons (2 with tests)");
        console.log("‚Ä¢ 5 test questions");
        console.log("‚Ä¢ 2 notifications");
        console.log("‚Ä¢ 1 admin user");
        console.log("‚Ä¢ 1 test user");
        console.log(
            "\nüìã Admin Telegram ID: 123456789 (update this in the seed file)"
        );
        console.log("üìã Test User Telegram ID: 987654321");
        console.log("\n‚ÑπÔ∏è  Don't forget to:");
        console.log("1. Update admin Telegram ID in the seed file");
        console.log("2. Replace placeholder URLs with real media URLs");
        console.log("3. Update button URLs with your actual bot username");
    } catch (error) {
        console.error("‚ùå Error during seeding:", error);
        throw error;
    } finally {
        await prisma.$disconnect();
    }
}

// Run the seed function
seed().catch((error) => {
    console.error("‚ùå Seeding failed:", error);
    process.exit(1);
});
